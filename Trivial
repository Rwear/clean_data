# -*- coding: utf-8 -*-
"""
Created on Thu Mar 18 13:01:39 2021

@author: Rwear
"""

import pandas as pd
import csv

# data_train = pd.read_csv('data/news_content.csv', sep='\t')

# print(data_train)


f1 = pd.read_csv('data/non_rumomr_comment.csv')
# f2 = pd.read_csv('data/rumor_comment.csv')
# f3 = pd.read_csv('data/news_content.csv')
# f4 = pd.read_csv('data/non_rumomr_comment.tsv')
# f5 = pd.read_csv('data/rumor_comment.tsv')
# f6 = pd.read_csv('data/news_content.tsv')
# f7 = pd.read_csv('data/comment.csv')
# f7 = pd.DataFrame()

with open('data/non_rumomr_comment.csv', newline='',encoding = 'utf-8') as csvfile:
    spamreader = csv.reader(csvfile, delimiter=' ', quotechar='|')
    for row in spamreader:
        print(row)
# f1=f1.drop([0]) #删除128，129，130行数据
# print(f1)

# for line in f2:
#     f7.add(line)
# for line in f1:
#     f7.add(line)    
# print(f7.id)
'''
连接两个csv
'''
# print(f1.id)
# print(f2.id)
# f1.append(f2)
# print(f1.id)
# print(f3)

# f3.to_csv('data/news_content.tsv')
# data_train = pd.read_csv('data/news_content.tsv')


# v=open('data/non_rumomr_comment.csv',encoding="UTF-8")

# # header = reader.fieldnames

# # with open('data/rumor_comment.csv', 'a',encoding="UTF-8") as csv_file:

# #    writer = csv.DictWriter(csv_file, fieldnames=header)
   

# #    writer.writerows(reader)

# print(reader.id)

# v.close()

# print(data_train.content.shape[0])

# for idx in range(data_train.content.shape[0]):
#     print(len(data_train.content[idx]))
#     break













# print(f1.id)
# file = [f1,f2]
# train = pd.concat(file)
# train.to_csv("data/comment" + ".tsv", index=0, sep=' ')


# df1 = pd.read_csv(r'data/rumor_comment.tsv', encoding="UTF-8")#读取第一个文件

# df2 = pd.read_csv(r'data/non_rumomr_comment.tsv', encoding="UTF-8")#读取第二个文件

# outfile = pd.merge(df1, df2,  left_on='label', right_on='0')#文件合并 left_on左侧DataFrame中的列或索引级别用作键。right_on 右侧

# outfile.to_csv(r'data/comment.tsv', index=False,encoding="UTF-8")#输出文件


'''
csv->tsv
'''
# f1 = pd.read_csv('data/news_content.csv')
# f1.to_csv('data/news_content.tsv')
# print(type(f1),type(f2),type(f3),type(f4),type(f5),type(f6))
# print(f1.id)

# path = 'data/non_rumomr_comment.csv'
# pd_all = pd.read_csv(path)
# tp=pd_all.to_csv('data/non_rumomr_comment_test.tsv', sep='\t', header=None,mode="w")

# print(tp.id)


# import jieba
# jieba.enable_paddle()# 启动paddle模式。 0.40版之后开始支持，早期版本不支持
# strs=["人间惨剧：今天下午约14点，宁波妇儿医院，一妇女携带一婴儿在住院楼跳楼，后抢救无效死亡。具体情况有关部门正在调查。据现场网友称妇女因小孩病重，加上负担不起昂贵的医疗费，带着刚满月的宝宝从12楼跳楼身亡。[蜡烛] 底层民众的医疗费用猛于虎，国人的性命其何等脆弱！[泪]"]
# for str in strs:
#     seg_list = jieba.cut(str,use_paddle=True) # 使用paddle模式
#     print("Paddle Mode: " + '/'.join(list(seg_list)))

# seg_list = jieba.cut("人间惨剧：今天下午约14点，宁波妇儿医院，一妇女携带一婴儿在住院楼跳楼，后抢救无效死亡。具体情况有关部门正在调查。据现场网友称妇女因小孩病重，加上负担不起昂贵的医疗费，带着刚满月的宝宝从12楼跳楼身亡。[蜡烛] 底层民众的医疗费用猛于虎，国人的性命其何等脆弱！[泪]", cut_all=True)
# print("Full Mode: " + "/ ".join(seg_list))  # 全模式

# seg_list = jieba.cut("人间惨剧：今天下午约14点，宁波妇儿医院，一妇女携带一婴儿在住院楼跳楼，后抢救无效死亡。具体情况有关部门正在调查。据现场网友称妇女因小孩病重，加上负担不起昂贵的医疗费，带着刚满月的宝宝从12楼跳楼身亡。[蜡烛] 底层民众的医疗费用猛于虎，国人的性命其何等脆弱！[泪]", cut_all=False)
# print("Default Mode: " + "/ ".join(seg_list))  # 精确模式

# seg_list = jieba.cut("人间惨剧：今天下午约14点，宁波妇儿医院，一妇女携带一婴儿在住院楼跳楼，后抢救无效死亡。具体情况有关部门正在调查。据现场网友称妇女因小孩病重，加上负担不起昂贵的医疗费，带着刚满月的宝宝从12楼跳楼身亡。[蜡烛] 底层民众的医疗费用猛于虎，国人的性命其何等脆弱！[泪]")  # 默认是精确模式
# print(" ".join(seg_list))

# seg_list = jieba.cut_for_search("人间惨剧：今天下午约14点，宁波妇儿医院，一妇女携带一婴儿在住院楼跳楼，后抢救无效死亡。具体情况有关部门正在调查。据现场网友称妇女因小孩病重，加上负担不起昂贵的医疗费，带着刚满月的宝宝从12楼跳楼身亡。[蜡烛] 底层民众的医疗费用猛于虎，国人的性命其何等脆弱！[泪]")  # 搜索引擎模式
# print(" ".join(seg_list))

import re

def clearContentWithSpecialCharacter(content):
 
# 先将<!--替换成，普通字符l
    content = content.replace("@","l")
# 再将-->替换成，普通字符l
    content = content.replace(" ","l")
# 分组标定，替换，
    pattern = re.compile(r'(l)(.*)(l)')
# 如果想包括两个1，则用pattern.sub(r\1''\3,content)
    return pattern.sub(r'',content)
# print(type(f1['comment']))
# for i in f1['commment']:
#     print(i)
# print(clearContentWithSpecialCharacter(f1['comment']))




# with open("data/non_rumomr_comment.csv",'r',encoding="utf-8") as csvfile:
#     reader = csv.DictReader(csvfile)
#     for row in reader:

#         print(row)






